from OpenGL.GL import *
from PIL import Image
import os

class Texture:

    def __init__(self, path:str, reversed):

        self.glid = glGenTextures(1)
        glBindTexture(GL_TEXTURE_2D, self.glid)

        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR)
        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR)

        source_dir = os.path.dirname(os.path.dirname(os.path.realpath(__file__)))
        image = Image.open(os.path.join(source_dir, path))
        if reversed:
            image = image.transpose(Image.FLIP_TOP_BOTTOM)

        img_data = image.convert("RGBA").tobytes()
        glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, image.width, image.height, 0, GL_RGBA, GL_UNSIGNED_BYTE, img_data)

        glBindTexture(GL_TEXTURE_2D, 0)

        # Destroy it if not used
        if img_data:
            del img_data



    def bind(self, slot:int = 0):
        glActiveTexture(GL_TEXTURE0 + slot)
        glBindTexture(GL_TEXTURE_2D, self.glid)

    def unbind(self):
        glBindTexture(GL_TEXTURE_2D, 0)
